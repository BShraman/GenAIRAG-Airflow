version: "3.8"

services:
  postgres:
    image: ${POSTGRES_IMAGE}
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - airflow

  airflow-webserver:
    image: ${AIRFLOW_IMAGE}
    container_name: airflow_webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW_BASE_URL=http://localhost:8080
    env_file:
       - .env
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    networks:
      - airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./chromadb:/opt/chromadb
      - ./include/data:/opt/data/
    entrypoint: ["/opt/airflow/entrypoint.sh", "webserver"]

  airflow-scheduler:
    image: ${AIRFLOW_IMAGE}
    container_name: airflow_scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW_BASE_URL=http://localhost:8080
    env_file:
       - .env
    depends_on:
      - postgres
    networks:
      - airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./chromadb:/opt/chromadb
      - ./include/data:/opt/data/
    entrypoint: ["/opt/airflow/entrypoint.sh", "scheduler"]

  airflow-init:
    image: ${AIRFLOW_IMAGE}
    container_name: airflow_init
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW_BASE_URL=http://localhost:8080
    env_file:
       - .env
    depends_on:
      - postgres
    networks:
      - airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./chromadb:/opt/chromadb
      - ./include/data:/opt/data/
    command: ["airflow", "db", "init"]

  gradio:
    image: ${AIRFLOW_IMAGE}
    container_name: gradio-chatbot
    environment:
      - KEY=VALUE
    env_file:
       - .env
    ports:
      - "7860:7860"
    volumes:
      - ./chromadb:/opt/chromadb
      - ./include/gradio:/opt/gradio
      - ./include/data:/opt/data/
    entrypoint: ["python3", "/opt/gradio/app.py"]
    
    networks:
      - airflow

# volumes:
#   postgres_data:
#   airflow_dags:
#   airflow_logs:

networks:
  airflow:
    driver: bridge
